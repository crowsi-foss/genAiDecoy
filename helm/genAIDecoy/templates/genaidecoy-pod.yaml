apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.genAIDecoyProtocol}}-genaidecoy-deployment
  labels:
    app: {{.Values.genAIDecoyProtocol}}-genaidecoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Values.genAIDecoyProtocol}}-genaidecoy
  template:
    metadata:
      labels:
        app: {{.Values.genAIDecoyProtocol}}-genaidecoy
    spec:
      containers:
      - name: genaidecoy
        image: {{.Values.imagereference}} 
        volumeMounts:
          {{- if eq .Values.useSecretProvider true }}
          - name: secrets-store-inline
            mountPath: "/mnt/secrets"
            readOnly: true
          {{- end }}
          - name: tmp
            mountPath: "/tmp"
        ports:
        - containerPort: {{.Values.containerPort}}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          seccompProfile:
            type: "RuntimeDefault"
        env:
        - name: {{.Values.genAIApiKeyEnvVariableName}}
          valueFrom:
            secretKeyRef:
              name: {{.Values.secretKeyRefName}}
              key: {{.Values.secretKeyRefKey}}
        - name: {{.Values.genAIDecoyProtocolEnvVariableName}}
          value: {{.Values.genAIDecoyProtocol}}
      volumes:
      - name: tmp
        emptyDir: {}
      {{- if eq .Values.useSecretProvider true}}
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{.Values.secretProvider}}
      {{- end }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{.Values.imagePullSecret}}
      {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{.Values.genAIDecoyProtocol}}-genaidecoy-service
spec:
  selector:
    app: {{.Values.genAIDecoyProtocol}}-genaidecoy
  ports:
  - protocol: TCP
    port: {{.Values.containerPort}}
    targetPort: {{.Values.containerPort}}

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{.Values.genAIDecoyProtocol}}-limit-genaidecoy-communication
spec:
  podSelector:
    matchLabels:
        app: {{.Values.genAIDecoyProtocol}}-genaidecoy
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: traefik
  - ports:
    - protocol: TCP
      port: {{.Values.containerPort}}